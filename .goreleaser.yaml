project_name: amur

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - netbsd
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - 6
      - 7

dockers:
  - image_templates:
      - "ghcr.io/maxpeterkaya/{{ .ProjectName }}:{{ .Version }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.licenses=MIT
      - --label=org.opencontainers.image.description=amur
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=io.artifacthub.package.maintainers=[{"name":"maxpeterkaya","email":"git@maxpeterkaya.com"}]
      - --label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/maxpeterkaya/amur/main/README.md
      - --label=io.artifacthub.package.keywords=golang,image,uploader,redis,caching,streaming,performance,hls,cdn,high-performance,webp,media-delivery,image-optimization,content-delivery,thumbnail-generation,go-echo,video-optimization,lightweight-cdn,load-time-reduction,media-optimization
      - --label=io.artifacthub.package.license=MIT

docker_manifests:
  - name_template: 'ghcr.io/maxpeterkaya/{{ .ProjectName }}:{{ .Version }}'
    image_templates:
      - 'ghcr.io/maxpeterkaya/{{ .ProjectName }}:{{ .Version }}-amd64'
  - name_template: 'ghcr.io/maxpeterkaya/{{ .ProjectName }}:latest'
    image_templates:
      - 'ghcr.io/maxpeterkaya/{{ .ProjectName }}:{{ .Version }}-amd64'

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

checksum:
  name_template: 'checksums.txt'

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '-y'
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
    artifacts: checksum
    output: true

docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: manifests
    output: true
    args:
      - 'sign'
      - '-y'
      - '${artifact}'

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^test:'
      - '^chore'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy

  groups:
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 10
    - title: Other work
      order: 999